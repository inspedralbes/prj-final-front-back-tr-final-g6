services: 
  prfg6-front:
    image: node:23-bullseye
    container_name: nuxt
    working_dir: /usr/src/app
    volumes:
      - ./front/nuxt:/usr/src/app
    ports:
      - "3000:3000"
    environment:
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    command: bash -c "rm -rf node_modules && npm install --no-bin-links && npm run dev"
    links:
      - prfg6-back

  prfg6-back:
     build: 
       dockerfile: ./back/develop.Dockerfile
       context: .
     command: sh -c "cp .env.DEV .env && rm -rf node_modules && npm install --no-bin-links && nodemon -L index.js"
     volumes:
       - ./back:/usr/src/app
     working_dir: /usr/src/app
     ports: 
       - 3020:3020
     depends_on:
       - prfg6-mysql
       - prfg6-mongodb

  prfg6-mongodb:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-bd:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@prfg6-mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - prfg6-mongodb

  prfg6-mysql:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root 
      MYSQL_DATABASE: prf-g6
    volumes:
      - mysql-bd:/var/lib/mysql:rw
      - ./bd/mysql/acubox.sql:/docker-entrypoint-initdb.d/acubox.sql
    ports:
      - 3306:3306
    # healthcheck:
    #   test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: prfg6-mysql
    depends_on:
      - prfg6-mysql
        # condition: service_healthy

volumes:
  mysql-bd:
  mongo-bd: