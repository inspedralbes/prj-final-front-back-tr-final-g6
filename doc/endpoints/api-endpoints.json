[
    {
        "endpoint": "/api/login",
        "method": "POST",
        "description": "Authenticate a user",
        "request": {
            "contentType": "application/json",
            "body": {
                "correu": "string",
                "contrasenya": "string"
            }
        },
        "response": {
            "200": {
                "description": "Login successful",
                "body": {
                    "message": "Login successful",
                    "user": "object"
                }
            },
            "400": {
                "description": "Missing required fields"
            },
            "401": {
                "description": "Invalid credentials"
            },
            "500": {
                "description": "Database query error"
            }
        }
    },
    {
        "endpoint": "/api/aules",
        "method": "GET",
        "description": "Get all classrooms",
        "response": {
            "200": {
                "description": "List of all classrooms",
                "body": "array"
            },
            "500": {
                "description": "Database query error"
            }
        }
    },
    {
        "endpoint": "/api/aules/actives",
        "method": "GET",
        "description": "Get all active classrooms",
        "response": {
            "200": {
                "description": "List of active classrooms",
                "body": "array"
            },
            "500": {
                "description": "Database query error"
            }
        }
    },
    {
        "endpoint": "/api/aules/:id",
        "method": "GET",
        "description": "Get a specific classroom by ID",
        "request": {
            "params": {
                "id": "number"
            }
        },
        "response": {
            "200": {
                "description": "Classroom details",
                "body": "object"
            },
            "404": {
                "description": "Classroom not found"
            },
            "500": {
                "description": "Database query error"
            }
        }
    },
    {
        "endpoint": "/api/aules",
        "method": "POST",
        "description": "Create a new classroom",
        "request": {
            "contentType": "application/json",
            "body": {
                "curs": "string",
                "classe": "string",
                "etapa": "string"
            }
        },
        "response": {
            "201": {
                "description": "Classroom created successfully",
                "body": {
                    "message": "Aula creada correctament",
                    "id": "number"
                }
            },
            "400": {
                "description": "Missing required fields"
            },
            "500": {
                "description": "Database insertion error"
            }
        }
    },
    {
        "endpoint": "/api/aules/:id",
        "method": "PUT",
        "description": "Update a classroom",
        "request": {
            "params": {
                "id": "number"
            },
            "contentType": "application/json",
            "body": {
                "Curs": "string",
                "Classe": "string",
                "Etapa": "string",
                "Planta": "string",
                "Aula": "string",
                "activa": "boolean",
                "turn": "string"
            }
        },
        "response": {
            "200": {
                "description": "Classroom updated successfully",
                "body": {
                    "message": "Aula actualizada con Ã©xito"
                }
            },
            "500": {
                "description": "Database update error"
            }
        }
    },
    {
        "endpoint": "/api/aules/:id",
        "method": "DELETE",
        "description": "Delete a classroom",
        "request": {
            "params": {
                "id": "number"
            }
        },
        "response": {
            "200": {
                "description": "Classroom deleted successfully",
                "body": {
                    "message": "aula esborrada correctament"
                }
            },
            "404": {
                "description": "Classroom not found"
            },
            "500": {
                "description": "Database deletion error"
            }
        }
    },
    {
        "endpoint": "/api/aules/:id/activa",
        "method": "PUT",
        "description": "Update classroom active status",
        "request": {
            "params": {
                "id": "number"
            },
            "contentType": "application/json",
            "body": {
                "activa": "boolean"
            }
        },
        "response": {
            "200": {
                "description": "Classroom status updated successfully",
                "body": {
                    "message": "string"
                }
            },
            "400": {
                "description": "Missing required fields"
            },
            "404": {
                "description": "Classroom not found"
            },
            "500": {
                "description": "Database update error"
            }
        }
    },
    {
        "endpoint": "/api/mapa",
        "method": "POST",
        "description": "Get average data for multiple classrooms",
        "request": {
            "contentType": "application/json",
            "body": {
                "aules": "array",
                "tipus": "string",
                "data": "string"
            }
        },
        "response": {
            "200": {
                "description": "List of classroom averages",
                "body": "array"
            },
            "400": {
                "description": "Missing required fields"
            },
            "500": {
                "description": "Database query error"
            }
        }
    },
    {
        "endpoint": "/api/aules/:id/grafic",
        "method": "POST",
        "description": "Get data for charts",
        "request": {
            "params": {
                "id": "number"
            },
            "contentType": "application/json",
            "body": {
                "taula": "string",
                "tipus": "string",
                "dataIni": "string",
                "dataFi": "string"
            }
        },
        "response": {
            "200": {
                "description": "Chart data",
                "body": "array"
            },
            "400": {
                "description": "Missing required fields"
            },
            "500": {
                "description": "Database query error"
            }
        }
    },
    {
        "endpoint": "/api/sensors",
        "method": "GET",
        "description": "Get all sensors",
        "response": {
            "200": {
                "description": "List of all sensors",
                "body": "array"
            },
            "500": {
                "description": "Database query error"
            }
        }
    },
    {
        "endpoint": "/api/sensors",
        "method": "PUT",
        "description": "Update a sensor",
        "request": {
            "contentType": "application/json",
            "body": {
                "MAC": "string",
                "nombre": "string",
                "ubicacion": "string",
                "x": "number",
                "y": "number"
            }
        },
        "response": {
            "200": {
                "description": "Sensor updated successfully",
                "body": {
                    "message": "Sensor actualitzat correctament"
                }
            },
            "404": {
                "description": "Sensor not found"
            },
            "500": {
                "description": "Database update error"
            }
        }
    },
    {
        "endpoint": "/api/newsensors",
        "method": "GET",
        "description": "Get all new sensors",
        "response": {
            "200": {
                "description": "List of all new sensors",
                "body": "array"
            },
            "500": {
                "description": "Database query error"
            }
        }
    },
    {
        "endpoint": "/api/newsensors",
        "method": "POST",
        "description": "Add a new sensor",
        "request": {
            "contentType": "application/json",
            "body": {
                "MAC": "string"
            }
        },
        "response": {
            "201": {
                "description": "New sensor created successfully",
                "body": {
                    "message": "Sensor creat correctament",
                    "id": "number"
                }
            },
            "400": {
                "description": "Sensor not accepted"
            },
            "500": {
                "description": "Database insertion error"
            }
        }
    },
    {
        "endpoint": "/api/data/mongodb",
        "method": "GET",
        "description": "Get data from MongoDB within a date range",
        "request": {
            "query": {
                "startDate": "string",
                "endDate": "string"
            }
        },
        "response": {
            "200": {
                "description": "Data retrieved successfully",
                "body": "array"
            },
            "400": {
                "description": "Missing or invalid date range"
            },
            "500": {
                "description": "Error retrieving data from MongoDB"
            }
        }
    },
    {
        "endpoint": "/api/data/mongodb",
        "method": "POST",
        "description": "Insert data into MongoDB",
        "request": {
            "contentType": "application/json",
            "body": {
                "volume": "number",
                "temperature": "number",
                "date": "string",
                "MAC": "string",
                "api_key": "string"
            }
        },
        "response": {
            "201": {
                "description": "Data inserted successfully",
                "body": {
                    "message": "Dades inserides correctament",
                    "id": "string"
                }
            },
            "400": {
                "description": "Incomplete data"
            },
            "403": {
                "description": "Invalid API key"
            },
            "500": {
                "description": "Error inserting data into MongoDB"
            }
        }
    },
    {
        "endpoint": "/api/data/mysql",
        "method": "POST",
        "description": "Insert aggregated data into MySQL",
        "request": {
            "contentType": "application/json",
            "body": {
                "timeSpan": "string",
                "sensors": "object"
            }
        },
        "response": {
            "201": {
                "description": "Data inserted successfully",
                "body": {
                    "message": "Dades inserides correctament",
                    "affectedRows": "number"
                }
            },
            "400": {
                "description": "Missing or invalid timeSpan or sensors data"
            },
            "500": {
                "description": "Database insertion error"
            }
        }
    }
]