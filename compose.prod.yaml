services:
  prfg6-front:
    build:
      context: ./front/nuxt
      dockerfile: prod.Dockerfile
    ports:
      - "3000:3000"

  prfg6-back:
    build:
      context: ./back/principal
      dockerfile: prod.Dockerfile
    container_name: back
    working_dir: /usr/src/app
    ports:
      - "3020:3020"
    command: "sh -c 'sleep 5 && node index.js'"
    depends_on:
      - prfg6-mysql
      - prfg6-mongodb

  prfg6-mongodb:
    image: mongo:6.0
    restart: always
    ports:
      - "27017:27017"
    env_file:
      - .env.PROD.DOCKER
    volumes:
      - mongo-bd:/data/db

  prfg6-mysql:
    image: mysql:8.0
    restart: always
    ports:
      - "3306:3306"
    env_file:
      - .env.PROD.DOCKER
    volumes:
      - mysql-bd:/var/lib/mysql:rw
      - ./bd/mysql/acubox.sql:/docker-entrypoint-initdb.d/acubox.sql

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env.PROD.DOCKER
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  prfg6-sensor:
    build:
      context: ./back/services
      dockerfile: prod.Dockerfile
    container_name: sensor-back
    working_dir: /usr/src/app
    volumes:
      - ./back/services/sensor:/usr/src/app
    command: "sh -c 'npm install && node index.js'"
    depends_on:
      - rabbitmq

  prfg6-dbinsert:
    build:
      context: ./back/services
      dockerfile: prod.Dockerfile
    container_name: dbinsert-back
    working_dir: /usr/src/app
    volumes:
      - ./back/services/dbinsert:/usr/src/app
    command: "sh -c 'npm install && node index.js'"
    depends_on:
      - prfg6-mongodb
      - prfg6-sensor

  prfg6-python:
    build:
      context: ./back/services/python
      dockerfile: prod.Dockerfile
    ports:
      - "5000:5000"
    working_dir: /usr/src/app
    container_name: prfg6-python
    depends_on:
      - prfg6-back

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - prfg6-mysql

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    env_file:
      - .env.PROD.DOCKER
    depends_on:
      - prfg6-mongodb
  
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  mysql-bd:
  mongo-bd:
  rabbitmq_data:
  portainer_data: